service: aws-vision-insights
frameworkVersion: '3'
useDotenv: true

provider:
  name: aws
  runtime: python3.9
  environment:
    AWS_REGION_NAME: ${env:AWS_REGION_NAME}
    BUCKET_NAME: ${env:BUCKET_NAME}
  iam:
    role:
      name: iam-vision-insights-role
      statements:
        - Effect: Allow
          Action: s3:*
          Resource: "*"
        - Effect: Allow
          Action: rekognition:*
          Resource: "*"

resources:
  Resources:
    MyS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${env:BUCKET_NAME}
        PublicAccessBlockConfiguration:
          RestrictPublicBuckets: false

    MyBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: MyS3Bucket
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS: '*'
              Action:
                - s3:GetObject
              Resource:
                Fn::Join:
                  - ''
                  - - 'arn:aws:s3:::'
                    - Ref: MyS3Bucket
                    - '/*'

functions:
  health:
    handler: routes/health.health
    events:
      - httpApi:
          path: /
          method: get
  v1Description:
    handler: routes/v1/v1_description.v1_description
    events:
      - httpApi:
          path: /v1
          method: get
  v1Vision:
    handler: routes/v1/v1_vision.v1_vision
    events:
      - httpApi:
          path: /v1
          method: post
  v2Description:
    handler: routes/v2/v2_description.v2_description
    events:
      - httpApi:
          path: /v2
          method: get
  v2Vision:
    handler: routes/v2/v2_vision.v2_vision
    events:
      - httpApi:
          path: /v2
          method: post